---
interface Props {
  title: string;
}

const { title } = Astro.props;
import Header from '../components/Header.astro';
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap'
      rel='stylesheet'
    />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <div class='l-header'>
      <div aria-hidden='true' class='l-gradient'></div>
    </div>
    <div class='l-container'>
      <div class='l-main'>
        <main class='l-page'>
          <slot />
        </main>
      </div>
    </div>
  </body>
</html>

<style is:global lang='scss'>
  :root {
    --ls: -0.02em;

    --page-bg: rgb(0, 2, 18);
    --text-base: #fff;
    --border-radius: 0.3rem;
    --text-accent: rgb(193, 196, 228);
    --transparent: rgba(255, 255, 255, 0);

    --max-width: 800px;
    --px-lr: 1.2rem;

    --font-size-sm: clamp(0.7rem, 0.09vw + 0.68rem, 0.75rem);
    --font-size-base: clamp(0.88rem, 0.23vw + 0.82rem, 1rem);
    --font-size-md: clamp(1.09rem, 0.43vw + 0.98rem, 1.33rem);
    --font-size-lg: clamp(1.37rem, 0.74vw + 1.18rem, 1.78rem);
    --font-size-xl: clamp(1.71rem, 1.2vw + 1.41rem, 2.37rem);
    --font-size-xxl: clamp(2.14rem, 1.86vw + 1.67rem, 3.16rem);
    --font-size-xxxl: clamp(2.67rem, 2.8vw + 1.97rem, 4.21rem);
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  body,
  h1,
  h2,
  h3,
  h4,
  h5,
  p,
  ul,
  li,
  figure,
  blockquote,
  dl,
  div,
  section,
  aside,
  hr,
  dd {
    all: unset;
    margin: 0;
    padding: 0;
    border: 0;
    vertical-align: baseline;
  }

  ul[role='list'],
  li,
  ol[role='list'] {
    list-style: none;
  }

  html:focus-within {
    scroll-behavior: smooth;
  }

  html {
    font-size: 87.5%;
  }

  a {
    text-decoration: inherit;
    color: inherit;
    background-color: transparent;
    cursor: pointer;
  }

  a:focus,
  button:focus {
    outline: none;
  }

  img,
  picture {
    max-width: 100%;
    display: block;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
  }

  body {
    min-height: 100vh;
    color: var(--text-base);
    line-height: 1.5;
    background-color: var(--page-bg);
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-family: 'Inter', system-ui, sans-serif;
  }

  .w-full {
    width: 100%;
  }

  .h-full {
    height: 100%;
  }

  .line {
    overflow: hidden;
    font-kerning: none;
  }

  .block {
    display: block;
  }

  .inline-block {
    display: inline-block;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .relative {
    position: relative;
  }

  .link {
    cursor: pointer;
    position: relative;
    white-space: nowrap;
  }

  .link::before,
  .link::after {
    position: absolute;
    width: 100%;
    height: 1px;
    background: currentColor;
    top: 100%;
    left: 0;
    pointer-events: none;
  }

  .link::before {
    content: '';
  }

  .link--metis {
    text-transform: inherit;
  }

  .link--metis::before {
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
    transition: transform 0.5s;
  }

  .link--metis:hover::before {
    transform-origin: 0% 50%;
    transform: scale3d(1, 1, 1);
  }

  .tags {
    --gutter: 0.5rem;
    display: flex;
    flex-wrap: wrap;

    justify-content: flex-start;
    align-items: center;
    gap: var(--gutter, clamp(1.375rem, 1.2rem + 0.89vw, 2rem));
    padding: 1rem;
  }

  .tag {
    &:last-child {
      margin-right: 0;
    }

    display: inline-block;
    vertical-align: middle;
    font-size: var(--font-size-base);
    line-height: 1;
    padding: 0.35rem 0.6rem;

    backdrop-filter: blur(12px);
    border-image: initial;
    background-position: 100%;
    border-radius: 2em;
    border: 1px solid rgba(255, 255, 255, 0.05);
    background: rgba(255, 255, 255, 0.01);
    cursor: pointer;
    appearance: none;
    text-transform: capitalize;
  }

  .flex {
    display: flex;

    &.gap {
      gap: 0.3rem;
    }

    &.ai {
      align-items: center;
    }

    &.jc {
      justify-content: center;
    }

    &.flex-column {
      flex-direction: column;
    }

    &.flex-row {
      flex-direction: row;
    }

    &.space-between {
      justify-content: space-between;
    }
  }

  .l-header {
    display: block;

    & > .l-gradient {
      position: absolute;
      width: 100%;
      height: 200px;
      z-index: -1;
      background: radial-gradient(
        ellipse 50% 100% at 50% -20%,
        rgba(120, 119, 198, 0.3),
        var(--transparent)
      );
    }
  }

  .l-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    position: relative;
    z-index: 0;
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
  }

  .l-main {
    margin: 0 auto;
    width: 100%;
    flex: 1 1 0%;
    min-height: 600px;
    max-width: var(--max-width);
  }

  .l-page {
    padding: 2rem var(--px-lr);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
</style>

<script>
  const vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', `${vh}px`);

  window.addEventListener('resize', () => {
    const vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
  });
</script>
